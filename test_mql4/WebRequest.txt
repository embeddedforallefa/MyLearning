//+------------------------------------------------------------------+
//|                                                   WebRequest.mq4 |
//|                                Copyright 2020, Pearlock pvt.Ltd. |
//|                                             https://www.mql5.com |
//+------------------------------------------------------------------+
#property copyright "Copyright 2020, Pearlock pvt.Ltd."
#property link      "https://www.mql5.com"
#property version   "1.00"
#property strict

input string url = "https://www.pearlockinv.com";
//+------------------------------------------------------------------+
//| Expert initialization function                                   |
//+------------------------------------------------------------------+
int OnInit()
  {
   string headers;
   char post[], result[];
   int res;

   ResetLastError();
   res = WebRequest("GET", url, NULL, NULL, 5000, post, 0, result, headers);

   if(res == -1)
     {
      Print("request did not successeed :", GetLastError());
      MessageBox("you want to connect to" + url + "and error is", MB_ICONINFORMATION);
     }
   else
     {
      PrintFormat("the resulting array size is: %d ",ArraySize(result));
      int filehandle = FileOpen("MyPage.htm", FILE_WRITE|FILE_BIN);
      if(filehandle != INVALID_HANDLE)
        {
         FileWriteArray(filehandle, result, 0, ArraySize(result));
         FileClose(filehandle);
         Print("Veeresh 1");
         for(int i=0; i < ArraySize(post); i++)
           {
            Print(post[i]);
           }
        }
      else
        {
         Print("Error in opening the file", GetLastError());
        }
     }
   return(INIT_SUCCEEDED);
  }
//+------------------------------------------------------------------+
//| Expert deinitialization function                                 |
//+------------------------------------------------------------------+
void OnDeinit(const int reason)
  {
  }
//+------------------------------------------------------------------+
//| Expert tick function                                             |
//+------------------------------------------------------------------+
void OnTick()
  {

//---

  }
//+------------------------------------------------------------------+
//| Timer function                                                   |
//+------------------------------------------------------------------+
void OnTimer()
  {
//---

  }
//+------------------------------------------------------------------+
//| Tester function                                                  |
//+------------------------------------------------------------------+
double OnTester()
  {
//---
   double ret=0.0;
//---

//---
   return(ret);
  }
//+------------------------------------------------------------------+
//| ChartEvent function                                              |
//+------------------------------------------------------------------+
void OnChartEvent(const int id,
                  const long &lparam,
                  const double &dparam,
                  const string &sparam)
  {
//---

  }
//+------------------------------------------------------------------+
